apiVersion: v1
binaryData:
  Org1MSPanchors.tx: CqUCChIKEAgCIgx1c2Vyc2NoYW5uZWwSjgIKiwIKDHVzZXJzY2hhbm5lbBJXElUKC0FwcGxpY2F0aW9uEkYIARI6CgdPcmcxTVNQEi8aBwoDTVNQEgAiCwoHV3JpdGVycxIAIgoKBkFkbWlucxIAIgsKB1JlYWRlcnMSACoGQWRtaW5zGqEBEp4BCgtBcHBsaWNhdGlvbhKOAQgBEoEBCgdPcmcxTVNQEnYIARoHCgNNU1ASABo7CgtBbmNob3JQZWVycxIsEiIKIAobcGVlcjAtb3JnMS1pbWZyZWVtb2JpbGUtY29tEIs3GgZBZG1pbnMiCwoHUmVhZGVycxIAIgsKB1dyaXRlcnMSACIKCgZBZG1pbnMSACoGQWRtaW5zKgZBZG1pbnM=
  channel.tx: CsUCChoKGAgCGgYIj4bI7AUiDHVzZXJzY2hhbm5lbBKmAgqjAgoMdXNlcnNjaGFubmVsEi4SHAoLQXBwbGljYXRpb24SDRILCgdPcmcxTVNQEgAaDgoKQ29uc29ydGl1bRIAGuIBErkBCgtBcHBsaWNhdGlvbhKpAQgBEgsKB09yZzFNU1ASABokCgxDYXBhYmlsaXRpZXMSFBIKCggKBFYxXzMSABoGQWRtaW5zIiIKBkFkbWlucxIYEg4IAxIKCgZBZG1pbnMQAhoGQWRtaW5zIiIKB1JlYWRlcnMSFxINCAMSCQoHUmVhZGVycxoGQWRtaW5zIiIKB1dyaXRlcnMSFxINCAMSCQoHV3JpdGVycxoGQWRtaW5zKgZBZG1pbnMaJAoKQ29uc29ydGl1bRIWEhQKEkNvbXBvc2VyQ29uc29ydGl1bQ==
  genesis.block: 
data:
  .gitkeep: ""
  config.yaml: |
    NodeOUs:
      Enable: true
      ClientOUIdentifier:
        Certificate: cacerts/ca.org1.imfreemobile.com-cert.pem
        OrganizationalUnitIdentifier: client
      PeerOUIdentifier:
        Certificate: cacerts/ca.org1.imfreemobile.com-cert.pem
        OrganizationalUnitIdentifier: peer
kind: ConfigMap
metadata:
  creationTimestamp: "2019-09-30T13:35:04Z"
  name: channel-artifacts
  namespace: default
  resourceVersion: "647"
  selfLink: /api/v1/namespaces/default/configmaps/channel-artifacts
  uid: cd5b4571-3a0b-4b0e-be48-807b5754df51
