apiVersion: v1
binaryData:
  Org1MSPanchors.tx: CqUCChIKEAgCIgx1c2Vyc2NoYW5uZWwSjgIKiwIKDHVzZXJzY2hhbm5lbBJXElUKC0FwcGxpY2F0aW9uEkYIARI6CgdPcmcxTVNQEi8aBwoDTVNQEgAiCwoHV3JpdGVycxIAIgoKBkFkbWlucxIAIgsKB1JlYWRlcnMSACoGQWRtaW5zGqEBEp4BCgtBcHBsaWNhdGlvbhKOAQgBEoEBCgdPcmcxTVNQEnYIARoHCgNNU1ASABo7CgtBbmNob3JQZWVycxIsEiIKIAobcGVlcjAub3JnMS5pbWZyZWVtb2JpbGUuY29tEIs3GgZBZG1pbnMiCwoHUmVhZGVycxIAIgsKB1dyaXRlcnMSACIKCgZBZG1pbnMSACoGQWRtaW5zKgZBZG1pbnM=
  channel.tx: CsUCChoKGAgCGgYI2MHA7AUiDHVzZXJzY2hhbm5lbBKmAgqjAgoMdXNlcnNjaGFubmVsEi4SHAoLQXBwbGljYXRpb24SDRILCgdPcmcxTVNQEgAaDgoKQ29uc29ydGl1bRIAGuIBErkBCgtBcHBsaWNhdGlvbhKpAQgBEgsKB09yZzFNU1ASABokCgxDYXBhYmlsaXRpZXMSFBIKCggKBFYxXzMSABoGQWRtaW5zIiIKB1dyaXRlcnMSFxINCAMSCQoHV3JpdGVycxoGQWRtaW5zIiIKBkFkbWlucxIYEg4IAxIKCgZBZG1pbnMQAhoGQWRtaW5zIiIKB1JlYWRlcnMSFxINCAMSCQoHUmVhZGVycxoGQWRtaW5zKgZBZG1pbnMaJAoKQ29uc29ydGl1bRIWEhQKEkNvbXBvc2VyQ29uc29ydGl1bQ==
  genesis.block: 
data:
  .gitkeep: ""
  config.yaml: |
    NodeOUs:
      Enable: true
      ClientOUIdentifier:
        Certificate: cacerts/ca.org1.imfreemobile.com-cert.pem
        OrganizationalUnitIdentifier: client
      PeerOUIdentifier:
        Certificate: cacerts/ca.org1.imfreemobile.com-cert.pem
        OrganizationalUnitIdentifier: peer
kind: ConfigMap
metadata:
  creationTimestamp: "2019-09-29T09:10:59Z"
  name: channel-artifacts
  namespace: default
  resourceVersion: "34182"
  selfLink: /api/v1/namespaces/default/configmaps/channel-artifacts
  uid: 2e3b9d85-aee2-48dd-a76c-180d1a581be9
